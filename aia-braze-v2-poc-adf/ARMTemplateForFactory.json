{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "aia-braze-v2-poc-adf"
		},
		"AzureFileSystemPackageStore_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureFileSystemPackageStore'"
		},
		"AzureFileSystemSSISLogs_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureFileSystemSSISLogs'"
		},
		"FileSystemPackageStore_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileSystemPackageStore'"
		},
		"Synapse_AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Synapse_AzureBlobStorage'"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://aia-braze-v2-poc-akv.vault.azure.net/"
		},
		"Currents_SQLServer_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sqlServer-connString"
		},
		"Currents_Synapse_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "synapse-connString"
		},
		"FileSystemPackageStore_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\aiasqlinsightsstorage.file.core.windows.net\\ssispackagestore"
		},
		"FileSystemPackageStore_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "Azure\\aiasqlinsightsstorage"
		},
		"adfmetadata_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "adfmetadata-connString"
		},
		"SSISAzureIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "aiasqlmisvr01.a1e189469806.database.windows.net"
		},
		"SSISAzureIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "boor"
		},
		"SSISAzureIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/1-DataLake_2_SQLMI_via_SSISDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SSIS package - SSISDB",
						"description": "Data Lake to SQL MI",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"packagePath": "LoadFromDataLake/Azure-LoadingFilesFromDataLake01/Package.dtsx",
								"type": "SSISDB"
							},
							"environmentPath": null,
							"connectVia": {
								"referenceName": "SSISAzureIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"loggingLevel": "Basic",
							"projectConnectionManagers": {},
							"packageConnectionManagers": {}
						}
					}
				],
				"folder": {
					"name": "SSIS-Demo"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-29T12:31:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SSISAzureIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_Autoloader_End_To_End')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run Autoloader To Synapse",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1_Trigger_Autoloader_To_Synapse",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Run Synapse To SQL Server",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Run Autoloader To Synapse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2_Copy_Incremental_Synapse_To_SQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "Braze-Autoloader/0_Root"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-28T20:04:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/1_Trigger_Autoloader_To_Synapse')]",
				"[concat(variables('factoryId'), '/pipelines/2_Copy_Incremental_Synapse_To_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_Trigger_Autoloader_To_Synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get table names",
						"description": "We replace the '_' with '.' right in the SQL query to align with Databricks.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT REPLACE(TableName, '_', '.') AS TableName FROM [dbo].[watermarktable]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarktable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Run Autoloader - per table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get table names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get table names').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Braze Autoloader - per table",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/braze-autoloader-poc/1.Landing-To-Bronze/1.autoloader-from-currents-landing",
										"baseParameters": {
											"table": {
												"value": "@item().TableName",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Braze-Autoloader/1_Supporting"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-28T20:04:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/watermarktable')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-DataLake_2_SQLMI_via_FileSystem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SSIS package - FileSystem",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"type": "PackageStore",
								"packagePath": "myFileSystemPackageStore/Azure-LoadingFilesFromDataLake01\\Package",
								"typeProperties": {}
							},
							"connectVia": {
								"referenceName": "SSISAzureIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"projectConnectionManagers": {},
							"packageConnectionManagers": {
								"DataLake": {
									"AccountKey": {
										"value": {
											"type": "AzureKeyVaultSecret",
											"store": {
												"referenceName": "AzureKeyVault",
												"type": "LinkedServiceReference"
											},
											"secretName": "SSIS-DataLake-AccountKey"
										}
									},
									"AccountName": {
										"value": "aiasqlinsightsstorage"
									},
									"AuthType": {
										"value": "1"
									},
									"ConnectByProxy": {
										"value": "False"
									},
									"ConnectUsingManagedIdentity": {
										"value": "False"
									},
									"ConnectionString": {
										"value": "ServiceType=AzureBlobFS;AccountName=aiasqlinsightsstorage;DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;"
									},
									"EndpointSuffix": {
										"value": "core.windows.net"
									},
									"SasToken": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									},
									"ServicePrincipalKey": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									},
									"ServiceType": {
										"value": "2"
									},
									"TargetServerVersion": {
										"value": "140"
									},
									"UseHttps": {
										"value": "True"
									}
								},
								"currents_ODBC": {
									"ConnectByProxy": {
										"value": "False"
									},
									"ConnectUsingManagedIdentity": {
										"value": "False"
									},
									"ConnectionString": {
										"value": "Data Source=aiasqlmisvr01.a1e189469806.database.windows.net;User ID=boor;Initial Catalog=currents;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;"
									},
									"InitialCatalog": {
										"value": "currents"
									},
									"Password": {
										"value": {
											"type": "AzureKeyVaultSecret",
											"store": {
												"referenceName": "AzureKeyVault",
												"type": "LinkedServiceReference"
											},
											"secretName": "SSIS-currents-Password"
										}
									},
									"RetainSameConnection": {
										"value": "False"
									},
									"ServerName": {
										"value": "aiasqlmisvr01.a1e189469806.database.windows.net"
									},
									"UserName": {
										"value": "boor"
									}
								},
								"currents_OLEDB": {
									"ConnectByProxy": {
										"value": "False"
									},
									"ConnectUsingManagedIdentity": {
										"value": "False"
									},
									"ConnectionString": {
										"value": "Data Source=aiasqlmisvr01.a1e189469806.database.windows.net;User ID=boor;Initial Catalog=currents;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;"
									},
									"InitialCatalog": {
										"value": "currents"
									},
									"Password": {
										"value": {
											"type": "AzureKeyVaultSecret",
											"store": {
												"referenceName": "AzureKeyVault",
												"type": "LinkedServiceReference"
											},
											"secretName": "SSIS-currents-Password"
										}
									},
									"RetainSameConnection": {
										"value": "False"
									},
									"ServerName": {
										"value": "aiasqlmisvr01.a1e189469806.database.windows.net"
									},
									"UserName": {
										"value": "boor"
									}
								}
							}
						}
					}
				],
				"folder": {
					"name": "SSIS-Demo"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SSISAzureIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_Copy_Incremental_Synapse_To_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get last load watermark - all tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermarktable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy incremental data - per table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get last load watermark - all tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get last load watermark - all tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy incremental data from Synapse to SQL Server",
									"description": "We will get data > the last load watermark, but <= the max latest watermark (in case there are loads being done as we speak - those will also come in). Specifying this last range allows us to be more precise.",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get latest watermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().Tablename} WHERE time_inserted > '@{item().WatermarkValue}' and time_inserted <= '@{activity('Get latest watermark').output.firstRow.NewWatermarkvalue}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlServerSink"
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "Synapse_AzureBlobStorage",
												"type": "LinkedServiceReference"
											},
											"path": "adf-staging"
										},
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Currents_Synapse_Tables",
											"type": "DatasetReference",
											"parameters": {
												"table": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Currents_SQLServer_Tables",
											"type": "DatasetReference",
											"parameters": {
												"table": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Watermark",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy incremental data from Synapse to SQL Server",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_watermark]",
										"storedProcedureParameters": {
											"LastModifiedtime": {
												"value": {
													"value": "@activity('Get latest watermark').output.firstRow.NewWatermarkvalue",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adfmetadata",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Get latest watermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "select MAX(time_inserted) as NewWatermarkvalue from @{item().TableName}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Currents_Synapse_Tables",
											"type": "DatasetReference",
											"parameters": {
												"table": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Braze-Autoloader/1_Supporting"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-28T20:04:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/watermarktable')]",
				"[concat(variables('factoryId'), '/datasets/Currents_Synapse_Tables')]",
				"[concat(variables('factoryId'), '/datasets/Currents_SQLServer_Tables')]",
				"[concat(variables('factoryId'), '/linkedServices/adfmetadata')]",
				"[concat(variables('factoryId'), '/linkedServices/Synapse_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-DataLake_2_SQLMI_via_EmbeddedPackage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SSIS package - Embedded Package",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"type": "InlinePackage",
								"typeProperties": {
									"packageName": "Package.dtsx",
									"packageContent": "",
									"packageLastModifiedDate": "2021-03-30T08:45:16.014Z UTC-4:00"
								}
							},
							"connectVia": {
								"referenceName": "SSISAzureIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"projectConnectionManagers": {},
							"packageConnectionManagers": {
								"DataLake": {
									"AccountKey": {
										"value": {
											"type": "SecureString",
											"value": "bull"
										}
									},
									"AccountName": {
										"value": "aiasqlinsightsstorage"
									},
									"AuthType": {
										"value": "1"
									},
									"ConnectByProxy": {
										"value": "False"
									},
									"ConnectUsingManagedIdentity": {
										"value": "False"
									},
									"ConnectionString": {
										"value": "ServiceType=AzureBlobFS;AccountName=aiasqlinsightsstorage;DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;"
									},
									"EndpointSuffix": {
										"value": "core.windows.net"
									},
									"SasToken": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									},
									"ServicePrincipalKey": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									},
									"ServiceType": {
										"value": "2"
									},
									"TargetServerVersion": {
										"value": "140"
									},
									"UseHttps": {
										"value": "True"
									}
								},
								"currents_ODBC": {
									"ConnectByProxy": {
										"value": "False"
									},
									"ConnectUsingManagedIdentity": {
										"value": "False"
									},
									"ConnectionString": {
										"value": "Data Source=aiasqlmisvr01.a1e189469806.database.windows.net;User ID=boor;Initial Catalog=currents;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;"
									},
									"InitialCatalog": {
										"value": "currents"
									},
									"Password": {
										"value": {
											"type": "AzureKeyVaultSecret",
											"store": {
												"referenceName": "AzureKeyVault",
												"type": "LinkedServiceReference"
											},
											"secretName": "SSIS-currents-Password"
										}
									},
									"RetainSameConnection": {
										"value": "False"
									},
									"ServerName": {
										"value": "aiasqlmisvr01.a1e189469806.database.windows.net"
									},
									"UserName": {
										"value": "boor"
									}
								},
								"currents_OLEDB": {
									"ConnectByProxy": {
										"value": "False"
									},
									"ConnectUsingManagedIdentity": {
										"value": "False"
									},
									"ConnectionString": {
										"value": "Data Source=aiasqlmisvr01.a1e189469806.database.windows.net;User ID=boor;Initial Catalog=currents;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;"
									},
									"InitialCatalog": {
										"value": "currents"
									},
									"Password": {
										"value": {
											"type": "AzureKeyVaultSecret",
											"store": {
												"referenceName": "AzureKeyVault",
												"type": "LinkedServiceReference"
											},
											"secretName": "SSIS-currents-Password"
										}
									},
									"RetainSameConnection": {
										"value": "False"
									},
									"ServerName": {
										"value": "aiasqlmisvr01.a1e189469806.database.windows.net"
									},
									"UserName": {
										"value": "boor"
									}
								}
							}
						}
					}
				],
				"folder": {
					"name": "SSIS-Demo"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-29T12:55:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SSISAzureIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Currents_SQLServer_Tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Currents_SQLServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table": {
						"type": "string",
						"defaultValue": "users_messages_pushnotification_Bounce"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Currents_SQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Currents_Synapse_Tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Currents_Synapse",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table": {
						"type": "string",
						"defaultValue": "users_messages_pushnotification_Bounce"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Currents_Synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermarktable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfmetadata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfmetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-8059003163767180.0.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "adb-token"
					},
					"existingClusterId": "1116-225432-pecks336"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileSystemPackageStore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureFileSystemPackageStore_connectionString')]",
					"fileShare": "ssispackagestore"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileSystemSSISLogs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureFileSystemSSISLogs_connectionString')]",
					"fileShare": "ssislogs"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Currents_SQLServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Currents_SQLServer_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "CurrentsOnPremIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/CurrentsOnPremIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Currents_Synapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Currents_Synapse_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileSystemPackageStore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileSystemPackageStore_properties_typeProperties_host')]",
					"userId": "[parameters('FileSystemPackageStore_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileSystemPackageStore_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Synapse_AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Blob Storage account related to storing Synapse related metadata",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Synapse_AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfmetadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('adfmetadata_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CurrentsOnPremIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSISAzureIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D1_v2",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 1,
						"vNetProperties": {
							"vNetId": "/subscriptions/ce859648-30e1-4135-9d0f-8358aebfe789/resourceGroups/aia-sqlinsights-rg/providers/Microsoft.Network/virtualNetworks/aiatelegrafvnet",
							"subnet": "ADF_IR_subnet"
						}
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('SSISAzureIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('SSISAzureIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('SSISAzureIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": null
						},
						"edition": "Standard",
						"licenseType": "BasePrice",
						"packageStores": [
							{
								"name": "myAzureFilesPackageStore",
								"packageStoreLinkedService": {
									"referenceName": "AzureFileSystemPackageStore",
									"type": "LinkedServiceReference"
								}
							},
							{
								"name": "myFileSystemPackageStore",
								"packageStoreLinkedService": {
									"referenceName": "FileSystemPackageStore",
									"type": "LinkedServiceReference"
								}
							}
						]
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFileSystemPackageStore')]",
				"[concat(variables('factoryId'), '/linkedServices/FileSystemPackageStore')]"
			]
		}
	]
}